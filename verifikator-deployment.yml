apiVersion: apps/v1
kind: Deployment
metadata:
  name: verifikator-deployment
  labels:
    app: verifikator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: verifikator
  template:
    metadata:
      labels:
        app: verifikator
    spec:
      initContainers: # <-- TAMBAHKAN BAGIAN INI
        - name: wait-for-db-verifikator
          image: busybox:latest # Menggunakan image ringan yang memiliki 'nc' (netcat)
          command: ["sh", "-c", "echo 'Waiting for db-verifikator-service...'; until nc -z db-verifikator-service 5432; do echo 'Waiting for db-verifikator-service...'; sleep 2; done; echo 'db-verifikator-service is up and reachable!';"]
      containers:
        - name: verifikator
          image: bostang/secure-onboarding-system-verifikator:latest
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://db-verifikator-service:5432/dukcapil_ktp
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_DATASOURCE_PASSWORD
              value: password
            - name: SERVER_PORT
              value: "8081"
            # Tambahkan variabel lingkungan lain yang dibutuhkan aplikasi verifikator Anda
          ports:
            - containerPort: 8081
          livenessProbe:
            httpGet:
              path: /actuator/health # Sesuaikan dengan endpoint health check Spring Boot Anda
              port: 8081
            initialDelaySeconds: 45 # Ditingkatkan dari 30
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /actuator/health # Sesuaikan dengan endpoint health check Spring Boot Anda
              port: 8081
            initialDelaySeconds: 30 # Ditingkatkan dari 30
            periodSeconds: 10
            failureThreshold: 3